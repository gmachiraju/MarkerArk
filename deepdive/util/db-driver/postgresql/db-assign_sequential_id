#!/usr/bin/env bash
# db-assign_sequential_id -- Assigns a unique integer to every row for a table using PostgreSQL sequence generator
# > eval "$(db-parse "$url")"
# > db-assign_sequential_id TABLE COLUMN BEGIN_ID [INCREMENT]
##
set -euo pipefail

[[ $# -gt 0 ]] || usage "$0" "Missing TABLE"
[[ $# -gt 1 ]] || usage "$0" "Missing COLUMN"
[[ $# -gt 2 ]] || usage "$0" "Missing BEGIN_ID"
Table=$1 Column=$2 BeginId=$3 Increment=${4:-1}

[[ $Increment -ne 0 ]] || usage "$0" "INCREMENT must be non-zero"

# Use PostgreSQL sequence generator named after the table and column
# See: http://www.postgresql.org/docs/current/static/sql-createsequence.html
seq="dd_seq_${Table}_${Column}"
minMaxValues=
if   [[ $Increment -gt 0 && $BeginId -le 0 ]]; then minMaxValues="MINVALUE $BeginId NO MAXVALUE"
elif [[ $Increment -lt 0 && $BeginId -ge 0 ]]; then minMaxValues="NO MINVALUE MAXVALUE $BeginId"
fi
db-execute "
    DROP SEQUENCE IF EXISTS $seq CASCADE;
    CREATE TEMPORARY SEQUENCE $seq INCREMENT BY $Increment $minMaxValues START $BeginId NO CYCLE;

    UPDATE $Table SET $Column = nextval('$seq');
"
